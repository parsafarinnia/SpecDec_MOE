/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
The following values were not passed to `accelerate launch` and had defaults used instead:
	`--num_processes` was set to a value of `2`
		More than one GPU was found, enabling multi-GPU training.
		If this was unintended please pass in `--num_processes=1`.
	`--num_machines` was set to a value of `1`
	`--dynamo_backend` was set to a value of `'no'`
To avoid this warning pass in values for each of the problematic parameters or run `accelerate config`.
/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Tracking run with wandb version 0.18.7
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
/home/farinneya/eagle/eagle/train/main.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(os.path.join(args.basepath, head_path))
/home/farinneya/eagle/eagle/train/main.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(os.path.join(args.basepath, head_path))
[rank1]: Traceback (most recent call last):
[rank1]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 196, in _run_module_as_main
[rank1]:     return _run_code(code, main_globals, None,
[rank1]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 86, in _run_code
[rank1]:     exec(code, run_globals)
[rank1]:   File "/home/farinneya/eagle/eagle/train/main.py", line 415, in <module>
[rank1]:     train_loader = DataLoader(traindataset, batch_size=train_config["bs"], shuffle=True,
[rank1]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 376, in __init__
[rank1]:     sampler = RandomSampler(dataset, generator=generator)  # type: ignore[arg-type]
[rank1]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/sampler.py", line 164, in __init__
[rank1]:     raise ValueError(
[rank1]: ValueError: num_samples should be a positive integer value, but got num_samples=0
Traceback (most recent call last):
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/farinneya/eagle/eagle/train/main.py", line 415, in <module>
    train_loader = DataLoader(traindataset, batch_size=train_config["bs"], shuffle=True,
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 376, in __init__
    sampler = RandomSampler(dataset, generator=generator)  # type: ignore[arg-type]
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/sampler.py", line 164, in __init__
    raise ValueError(
ValueError: num_samples should be a positive integer value, but got num_samples=0
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 196, in _run_module_as_main
[rank0]:     return _run_code(code, main_globals, None,
[rank0]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/runpy.py", line 86, in _run_code
[rank0]:     exec(code, run_globals)
[rank0]:   File "/home/farinneya/eagle/eagle/train/main.py", line 415, in <module>
[rank0]:     train_loader = DataLoader(traindataset, batch_size=train_config["bs"], shuffle=True,
[rank0]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 376, in __init__
[rank0]:     sampler = RandomSampler(dataset, generator=generator)  # type: ignore[arg-type]
[rank0]:   File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/utils/data/sampler.py", line 164, in __init__
[rank0]:     raise ValueError(
[rank0]: ValueError: num_samples should be a positive integer value, but got num_samples=0
[1;34mwandb[0m:
[1;34mwandb[0m: You can sync this run to the cloud by running:
[1;34mwandb[0m: [1mwandb sync /home/farinneya/eagle/wandb/offline-run-20250121_184104-p6kzoj57[0m
[1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250121_184104-p6kzoj57/logs[0m
[rank0]:[W121 18:41:07.504367106 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
E0121 18:41:11.502000 4188785 site-packages/torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: 1) local_rank: 0 (pid: 4189082) of binary: /home/farinneya/miniconda3/envs/eagle2/bin/python
Traceback (most recent call last):
  File "/home/farinneya/miniconda3/envs/eagle2/bin/accelerate", line 8, in <module>
    sys.exit(main())
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py", line 45, in main
    args.func(args)
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/accelerate/commands/launch.py", line 970, in launch_command
    multi_gpu_launcher(args)
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/accelerate/commands/launch.py", line 646, in multi_gpu_launcher
    distrib_run.run(args)
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/distributed/run.py", line 910, in run
    elastic_launch(
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 138, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/farinneya/miniconda3/envs/eagle2/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 269, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
eagle.train.main FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2025-01-21_18:41:11
  host      : lux-3-node-04
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 4189083)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2025-01-21_18:41:11
  host      : lux-3-node-04
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 4189082)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
